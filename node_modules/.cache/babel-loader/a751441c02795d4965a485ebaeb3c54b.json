{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/ajinn/Desktop/comp secure/classbadbad-blog-front/src/components/Post.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Moment from 'react-moment';\nimport axios from \"axios\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport Divider from '@material-ui/core/Divider';\nimport TextField from '@material-ui/core/TextField';\nimport UserImg from \"../assets/user.png\";\nimport Comment from \"../components/Comment\";\nconst ROLE = {\n  ADMIN: \"ADMIN\",\n  USER: \"USER\"\n};\n\nconst Post = ({\n  postId,\n  content,\n  authorId,\n  authorName,\n  timestamp,\n  isEdited,\n  comments,\n  userId,\n  userRole,\n  getAllPosts\n}) => {\n  _s();\n\n  const classes = useStyles();\n  const token = JSON.parse(localStorage.getItem('token'));\n  const [commentContent, setCommentContent] = useState('');\n\n  const handleCreateComment = async () => {\n    try {\n      const response = await axios.post(\"http://localhost:3000/post/comment/\" + postId, {\n        commentMsg: commentContent\n      }, {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      const {\n        message\n      } = response.data;\n\n      if (message) {\n        console.log(message);\n        setCommentContent('');\n        getAllPosts();\n      } else {\n        console.log(\"CreateComment Error\");\n      }\n    } catch (e) {\n      console.log(\"There are something wrong about create comment :(\");\n    }\n  };\n\n  const onTextFiledPressEnter = e => {\n    if (e.keyCode === 13) {\n      handleCreateComment();\n    }\n  };\n\n  const handleDeletePost = async () => {\n    try {\n      const response = await axios.delete(\"http://localhost:3000/post/\" + postId, {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      const {\n        message\n      } = response.data;\n\n      if (message) {\n        console.log(message);\n        getAllPosts();\n      } else {\n        console.log(\"DeletePost Error\");\n      }\n    } catch (e) {\n      console.log(\"There are something wrong about delete post :(\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.container,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.header,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.user,\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: classes.img,\n          src: UserImg\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.userDetail,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.owner,\n            children: authorName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Moment, {\n            className: classes.time,\n            fromNow: true,\n            children: timestamp\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), (userRole === ROLE.ADMIN || userId === authorId) && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(EditIcon, {\n          className: classes.icon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(DeleteIcon, {\n          className: classes.icon,\n          onClick: () => handleDeletePost()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), isEdited && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.edited,\n      children: \"Edited\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {\n      className: classes.divider\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), comments.map(comment => /*#__PURE__*/_jsxDEV(Comment, {\n      postId: postId,\n      postAuthor: authorId,\n      commentId: comment._id,\n      content: comment.commentMsg,\n      isEdited: comment.isEdited,\n      timestamp: comment.timestamp,\n      commentAuthor: comment.userId,\n      commentAuthorName: comment.username,\n      userId: userId,\n      userRole: userRole,\n      getAllPosts: getAllPosts\n    }, comment._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(TextField, {\n      placeholder: \"Write a comment...\",\n      variant: \"outlined\",\n      size: \"small\",\n      value: commentContent,\n      onChange: e => setCommentContent(e.target.value),\n      onKeyDown: onTextFiledPressEnter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Post, \"q3LNSTSn26+17fFsNWahEHb1ao4=\", false, function () {\n  return [useStyles];\n});\n\n_c = Post;\nconst useStyles = makeStyles({\n  container: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    backgroundColor: \"white\",\n    padding: 16,\n    boxShadow: \"0.25px 0.5px 2px #DADADA\",\n    borderRadius: 5\n  },\n  user: {\n    display: \"flex\",\n    flexDirection: \"row\"\n  },\n  img: {\n    height: 36,\n    width: 36,\n    marginRight: 8\n  },\n  userDetail: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"space-between\"\n  },\n  icon: {\n    height: 20,\n    width: 20,\n    color: \"#7F817D\",\n    marginLeft: 8\n  },\n  header: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    marginBottom: 16\n  },\n  divider: {\n    marginTop: 16,\n    marginBottom: 16\n  },\n  owner: {\n    fontWeight: 500\n  },\n  time: {\n    fontSize: 12,\n    color: \"#ADAFA9\"\n  },\n  comment: {\n    marginBottom: 8\n  },\n  edited: {\n    fontSize: 10,\n    color: \"#ADAFA9\",\n    fontStyle: \"italic\",\n    marginTop: 2\n  }\n});\nexport default Post;\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"sources":["/Users/ajinn/Desktop/comp secure/classbadbad-blog-front/src/components/Post.js"],"names":["React","useState","Moment","axios","makeStyles","EditIcon","DeleteIcon","Divider","TextField","UserImg","Comment","ROLE","ADMIN","USER","Post","postId","content","authorId","authorName","timestamp","isEdited","comments","userId","userRole","getAllPosts","classes","useStyles","token","JSON","parse","localStorage","getItem","commentContent","setCommentContent","handleCreateComment","response","post","commentMsg","headers","message","data","console","log","e","onTextFiledPressEnter","keyCode","handleDeletePost","delete","container","header","user","img","userDetail","owner","time","icon","edited","divider","map","comment","_id","username","target","value","display","flexDirection","backgroundColor","padding","boxShadow","borderRadius","height","width","marginRight","justifyContent","color","marginLeft","marginBottom","marginTop","fontWeight","fontSize","fontStyle"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport Moment from 'react-moment';\nimport axios from \"axios\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport Divider from '@material-ui/core/Divider';\nimport TextField from '@material-ui/core/TextField';\n\nimport UserImg from \"../assets/user.png\";\nimport Comment from \"../components/Comment\";\n\nconst ROLE = {\n  ADMIN: \"ADMIN\",\n  USER: \"USER\"\n}\n\nconst Post = ({\n  postId,\n  content,\n  authorId,\n  authorName,\n  timestamp, \n  isEdited, \n  comments,\n  userId,\n  userRole,\n  getAllPosts\n}) => {\n  const classes = useStyles();\n  const token = JSON.parse(localStorage.getItem('token'));\n  const [commentContent, setCommentContent] = useState('');\n\n  const handleCreateComment = async () => {\n    try {\n      const response = await axios.post(\"http://localhost:3000/post/comment/\"+postId, {\n        commentMsg: commentContent\n      }, {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      const { message } = response.data;\n      if (message) {\n        console.log(message);\n        setCommentContent('');\n        getAllPosts();\n      } else {\n        console.log(\"CreateComment Error\");\n      } \n    } catch (e) {\n      console.log(\"There are something wrong about create comment :(\");\n    }\n  };\n\n  const onTextFiledPressEnter = (e) => {\n    if (e.keyCode === 13) {\n      handleCreateComment();\n    }\n  };\n\n  const handleDeletePost = async () => {\n    try {\n      const response = await axios.delete(\"http://localhost:3000/post/\"+postId, {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      const { message } = response.data;\n      if (message) {\n        console.log(message);\n        getAllPosts();\n      } else {\n        console.log(\"DeletePost Error\");\n      } \n    } catch (e) {\n      console.log(\"There are something wrong about delete post :(\");\n    }\n  };\n  \n  return (\n    <div className={classes.container}>\n      <div className={classes.header}>\n        <div className={classes.user}>\n          <img \n            className={classes.img}\n            src={UserImg}\n          />\n          <div className={classes.userDetail}>\n            <div className={classes.owner}>{authorName}</div>\n            <Moment className={classes.time} fromNow>{timestamp}</Moment>\n          </div>\n        </div>\n        { (userRole === ROLE.ADMIN || userId === authorId) &&\n          <div>\n            <EditIcon className={classes.icon}/>\n            <DeleteIcon \n              className={classes.icon} \n              onClick={() => handleDeletePost()}\n            />\n          </div>\n        }\n      </div>\n      <div>{content}</div>\n      { isEdited &&\n        <div className={classes.edited}>Edited</div>\n      }\n      <Divider className={classes.divider}/>\n      { comments.map((comment) => (\n        <Comment\n          key={comment._id}\n          postId={postId}\n          postAuthor={authorId}\n          commentId={comment._id} \n          content={comment.commentMsg}\n          isEdited={comment.isEdited}\n          timestamp={comment.timestamp}\n          commentAuthor={comment.userId}\n          commentAuthorName={comment.username}\n          userId={userId}\n          userRole={userRole}\n          getAllPosts={getAllPosts}\n        />\n      ))}\n      <TextField\n        placeholder=\"Write a comment...\"\n        variant=\"outlined\"\n        size=\"small\"\n        value={commentContent}\n        onChange={e => setCommentContent(e.target.value)}\n        onKeyDown={onTextFiledPressEnter}\n      />\n    </div>\n  );\n};\n  \n  const useStyles = makeStyles({\n    container: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      backgroundColor: \"white\",\n      padding: 16,\n      boxShadow: \"0.25px 0.5px 2px #DADADA\",\n      borderRadius: 5\n    },\n    user: {\n      display: \"flex\",\n      flexDirection: \"row\",\n    },\n    img: {\n      height: 36,\n      width: 36,\n      marginRight: 8\n    },\n    userDetail: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      justifyContent: \"space-between\"\n    },\n    icon: {\n      height: 20,\n      width: 20,\n      color: \"#7F817D\",\n      marginLeft: 8\n    },\n    header: {\n      display: \"flex\",\n      justifyContent: \"space-between\",\n      marginBottom: 16\n    },\n    divider: {\n      marginTop: 16,\n      marginBottom: 16\n    },\n    owner:{\n      fontWeight: 500\n    },\n    time: {\n      fontSize: 12,\n      color: \"#ADAFA9\"\n    },\n    comment: {\n      marginBottom: 8\n    },\n    edited: {\n      fontSize: 10,\n      color: \"#ADAFA9\",\n      fontStyle: \"italic\",\n      marginTop: 2\n    }\n  });\n  \n  export default Post;\n  "]},"metadata":{},"sourceType":"module"}